plugins {
    id 'java'
    id("io.qameta.allure") version "2.6.0"
}

group 'web_test_helloworld2'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

allure {
    autoconfigure = true
    version = "2.13.0"
    useTestNG {
        version = "2.13.0"
    }
    downloadLink = "http://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.13.0/allure-commandline-2.13.0.zip"
}

defaultTasks 'clean', 'test'

sourceSets {
    main {
        java {srcDir 'src'}
        resources {srcDir 'src'}
    }
    test {
        java {srcDir 'test'}
        resources {srcDir 'test'}
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

dependencies {
    testCompile 'junit:junit:4.12'
   testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.slf4j:slf4j-simple:1.7.5'
    testCompile 'com.codeborne:selenide:5.4.1'
    testCompile 'io.qameta.allure:allure-junit4:2.12.1'
   testCompile('org.seleniumhq.selenium:selenium-safari-driver:3.141.59') { transitive = false }
    testCompile('org.seleniumhq.selenium:htmlunit-driver:2.36.0')
    testCompile('com.codeborne:phantomjsdriver:1.4.4') { transitive = false }
}

task libs(type: Sync) {
    from configurations.testCompile
    into "$buildDir/lib"
}

classes.dependsOn libs

[compileJava, compileTestJava]*.options.collect {options -> options.encoding = 'UTF-8'}
[compileJava, compileTestJava]*.options.collect {options -> options.debug = true}

tasks.withType(Test).all { testTask ->
    testTask.systemProperties = [
            'file.encoding': 'UTF-8'
    ]
    testTask.testLogging.showStandardStreams = true
    
    testTask.outputs.upToDateWhen { false }
}

task chrome(type: Test) {
    systemProperties['selenide.browser'] = 'chrome'
    systemProperties['selenide.headless'] = 'false'
}

task firefox(type: Test) {
    systemProperties['selenide.browser'] = 'firefox'
    systemProperties['selenide.headless'] = 'true'
}

task ie(type: Test) {
    systemProperties['selenide.browser'] = 'ie'
}

task edge(type: Test) {
    systemProperties['selenide.browser'] = 'edge'
}

task htmlunit(type: Test) {
    systemProperties['selenide.browser'] = 'htmlunit'
}

task phantomjs(type: Test) {
    systemProperties['selenide.browser'] = 'phantomjs'
}

// You must enable the 'Allow Remote Automation' option in Safari's Develop menu to control Safari via WebDriver.
task safari(type: Test) {
    systemProperties['selenide.browser'] = 'safari'
}
